[["index.html", "Aligning deep RNAseq and Digital Gene Expression (DGE) reads using bcbio Quick Start Recommended Directory Structure", " Aligning deep RNAseq and Digital Gene Expression (DGE) reads using bcbio Artem Sokolov, Sarah Boswell, Jeremy Muhlich, Clemens Hug Laboratory of Systems Pharmacology Last Updated: 2024-02-14 Quick Start Ensure your O2 environment is properly setup to run bcbio. Put your data in permanent storage and create a copy on /n/scratch/. Do you have multiple fastq files that need to be merged for each sample? If yes, run bcbio_prepare_samples.py to merge the files. Rename the resulting *-merged.csv to alignment.csv. (This is often the case for deep RNAseq experiments.) If not, compose alignment.csv that maps filenames to corresponding sample descriptions. (This is often the case for DGE.) (Optional) Download the latest human (or mouse) genome reference. Compose a setting YAML file. Instantiate the bcbio workspace. Descend into alignment/work subdirectory. Kick off a bcbio run. Recommended Directory Structure To keep things organized, we recommend maintaining the following directory structure. Let /n/scratch/abc123/myProject/ be the root directory of your analysis. Replace abc123 with your eCommons ID, and myProject with your project name. See the section on data storage to learn how to create a copy of your data on /n/scratch/. Under /n/scratch/abc123/myProject/ create the following subdirectories: fastq - place your raw fastq files here. merged - automatically created by bcbio_prepare_samples.py if you have mulitple files per sample. reference - download your reference genome to this subdirectory. alignment - automatically created by bcbio together with its subdirectories: config - bcbio will derive configuration files from your settings YAML file and place them here. work - the bulk of the work files will reside here. final - the resulting counts matrices will appear here, when bcbio finishes. "],["prereqs.html", "1 Prerequisites in O2 environment", " 1 Prerequisites in O2 environment If this is your first time using a linux command shell, make sure you type the commands in exactly as is. Things like spaces and quotes matter. The easiest way to do this is to copy and paste the commands from these instructions into your command shell. Login to O2 using the instructions available at https://wiki.rc.hms.harvard.edu/display/O2/Using+Slurm+Basic Familiarize yourself with nano, a text editor in linux. Specifically, make note of keyboard shortcuts CTRL+O to save, CTRL+X to exit. Use nano ~/.bashrc to open your .bashrc file and add the following lines: # Defines a new command, soar, for requesting an interactive compute shell alias &#39;soar=srun -p interactive -t 0-12:00 -n 2 --pty /bin/bash&#39; Save and exit (CTRL+O and CTRL+X in nano). This defines a new command soar, which you will use to request an interactive compute shell after logging into O2. This needs to be done only once. Log out of O2 and log back in. This will ensure that the new lines in .bashrc take effect. (Alternatively, you can type source ~/.bashrc without logging out.) When you first log into O2, you are given a login shell. While you will be able to submit jobs (like bcbio) from the login shell, you will not be able to run resource intensive jobs, such as merging of fastq files. To do the latter, you need to request an interactive compute shell using the new soar command you just defined. Simply type soar and you should get an output that looks something like this: [abc123@login01 ~]$ soar srun: job 6094734 queued and waiting for resources srun: job 6094734 has been allocated resources [abc123@compute-a-01-02 ~]$ Lastly, load the bcbio module by typing module load bcbio in your shell prompt: [abc123@compute-a-01-02 ~]$ module load bcbio "],["data.html", "2 Data Storage 2.1 Download the primary sequence data to ImStor 2.2 Copy the sequence data to /n/scratch 2.3 (Optional) Convert BCL files to FASTQ", " 2 Data Storage All of the steps in this section must be performed from the Unix system transfer.rc.hms.harvard.edu, which you access via SSH using your eCommons username and password. The examples below use the username abc123, so in the typed commands after the $ you must substitute your own username (or the username of whomever you’re working on behalf of). 2.1 Download the primary sequence data to ImStor [abc123@transfer ~]$ cd /n/files/ImStor/sorger/data/rnaseq [abc123@transfer rnaseq]$ mkdir abc123 [abc123@transfer rnaseq]$ cd abc123 [abc123@transfer abc123]$ mkdir project_name [abc123@transfer abc123]$ cd project_name Now, follow the data download instructions from your sequencing facility. At HMS, the sequencing core will often share a web URL that contains your data and additional QC reports. You can download the entire directory (or a subfolder with just your FASTQ files) using a recursive wget command: [abc123@transfer project_name]$ wget -r --no-parent http://facility-url/ replacing http://facility-url/ with the link to the directory containing all the files you want to download. Several caveats should be kept in mind: It is important to include the trailing slash at the end of the URL provided by the sequencing core. The certificate or credentials of the Bauer core file server are not always up to date. When pulling data off their server, sometimes it’s necessary to include the --no-check-certificate flag to avoid errors. For example, the above command would look as wget -r --no-parent --no-check-certificate http://facility-url/ 2.2 Copy the sequence data to /n/scratch After creating a permanent copy of your data on ImStor, you will want to also create a secondary working copy on /n/scratch, where all bcbio analysis will actually be performed. [abc123@transfer project_name]$ cd .. [abc123@transfer abc123]$ mkdir /n/scratch/abc123 [abc123@transfer abc123]$ rsync -avP project_name /n/scratch/abc123 [abc123@transfer abc123]$ exit It’s important not to put a trailing / on project_name in the rsync command. (If you include the /, the files will end up one directory level too high) 2.3 (Optional) Convert BCL files to FASTQ Typically, the conversion from BCL to FASTQ is done by the sequencing core. However, occasionally you may need to perform a custom conversion. To do so, you will want to use Illumina’s bcl2fastq tool. The tool accepts many parameters, the precise value of which is highly dependent on the sequencer and the library prep. Consult the tool guide to identify the proper parameter settings that match your library preparation protocol. You will then want to logout of transfer.rc.hms.harvard.edu, log back in to o2.hms.harvard.edu and request a compute node using the previously defined soar command: [abc123@login01 ~]$ soar [abc123@compute-a-01-02 ~]$ On the compute node, navigate to your data location that contains BCL files and run the bcl2fastq tools: module load bcl2fastq cd /n/scratch/abc123/project_name/bcl mkdir ../fastq bcl2fastq &lt;settings parameters&gt; --sample-sheet &lt;path/to/sample/sheet&gt; --runfolder-dir . --output-dir ../fastq "],["sampledesc.html", "3 Sample Description 3.1 Digital Gene Expression 3.2 Deep RNAseq", " 3 Sample Description bcbio expects a sample description file that tells it which files map to which samples. The file should be in the .csv format and have at least two columns. An example file for four samples might look like this: samplename,description S1.fastq.gz,S1 S2.fastq.gz,S2 S3.fastq.gz,S3 S4.fastq.gz,S4 where file S1.fastq.gz is mapped to the sample named S1, and so on. Additional columns can be included in this file and get preserved by bcbio as sample metadata. Each subsection below shows how to generate a sample description file. The rest of the guide assumes that this sample description file is named alignment.csv. 3.1 Digital Gene Expression When working with DGE data, you will typically have two matching files with suffixes R1 and R2. Only the R1 file needs to be specified in the sample description file. For example, your alignment.csv might look like samplename,description DGE1_XT_S1_R1_001.fastq.gz,MasterPlate where the matching DGE1_XT_S1_R2_001.fastq.gz is not listed explicitly. Because of the high-throughput nature of DGE, all reads will generally be inside a single FASTQ file. This makes it easy to compose a sample description file by hand, as it will usually contain only two lines. When dealing with multiple FASTQ files, the sample description file can also be generated automatically by running the following command: (echo &#39;samplename,description&#39;; for f in fastq/*R1*fastq*.*z*; do readlink -f $f | perl -pe &#39;s/(.*?_(S[0-9]+)_.*)/\\1,\\2/&#39;; done) &gt; alignment.csv 3.2 Deep RNAseq In the case of deep RNAseq data, you may have multiple FASTQ files per sample. Prior to running the aligner, these files need to be merged. bcbio provides a script for doing so, but it needs to know which files map to which samples. Compose a file named toMerge.csv that provides such a mapping. For example, samplename,description /n/scratch/abc123/myProject/fastq/TRA00140445_S1_L001_R1.fastq.bz2,S1 /n/scratch/abc123/myProject/fastq/TRA00140445_S1_L002_R1.fastq.bz2,S1 /n/scratch/abc123/myProject/fastq/TRA00140445_S1_L003_R1.fastq.bz2,S1 /n/scratch/abc123/myProject/fastq/TRA00140445_S1_L004_R1.fastq.bz2,S1 /n/scratch/abc123/myProject/fastq/TRA00140445_S2_L001_R1.fastq.bz2,S2 /n/scratch/abc123/myProject/fastq/TRA00140445_S2_L002_R1.fastq.bz2,S2 /n/scratch/abc123/myProject/fastq/TRA00140445_S2_L003_R1.fastq.bz2,S2 /n/scratch/abc123/myProject/fastq/TRA00140445_S2_L004_R1.fastq.bz2,S2 lists the mapping for two samples S1 and S2, each having data collected across four sequencer lanes. If you are currently in your project directory /n/scratch/abc123/myProject/ and have your data in the fastq/ subdirectory, such a file can be constructed automatically by running the following command: (echo &#39;samplename,description&#39;; for f in fastq/*fastq*.*z*; do readlink -f $f | perl -pe &#39;s/(.*?_(S[0-9]+)_.*)/\\1,\\2/&#39;; done) &gt; toMerge.csv 3.2.1 One file per sample If you don’t have multiple FASTQ files per sample, then toMerge.csv that you just constructed becomes your sample description file. Rename it to alignment.csv using mv toMerge.csv alignment.csv and proceed to downloading a reference genome. 3.2.2 Multiple files per sample Once you have prepared the file toMerge.csv, run the following command to execute the merge: bcbio_prepare_samples.py --out merged --csv toMerge.csv The merging operation might take a while. When it finishes, your merged files will reside in the merged/ subdirectory. You will also have a new filename-to-samplename mapping file toMerge-merged.csv. For consistency with the remainder of this guide, rename this file to alignment.csv using the mv command: mv toMerge-merged.csv alignment.csv "],["refgenome.html", "4 (Optional) Reference Genome 4.1 Digital Gene Expression 4.2 Deep RNAseq", " 4 (Optional) Reference Genome This step is optional. bcbio maintains a current version of human and mouse genomes internally. If you are happy with using the standard, proceed to composing a setting YAML file. Otherwise, read on about composing a custom reference. Navigate to https://ftp.ensembl.org/pub/ and identify the desired release of the Ensembl reference genome. As of 2024-02-14, the latest is release-111. For a given release, you will want to identify cdna and gtf files for your species. For example, when working with release-111 human data, the files are https://ftp.ensembl.org/pub/release-111/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz and https://ftp.ensembl.org/pub/release-111/gtf/homo_sapiens/Homo_sapiens.GRCh38.111.gtf.gz Ensure that you are in the reference/ subfolder of your project. Download the reference files using the wget command: wget ftp://ftp.ensembl.org/pub/release-111/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz wget ftp://ftp.ensembl.org/pub/release-111/gtf/homo_sapiens/Homo_sapiens.GRCh38.111.gtf.gz If you are interested in also looking at the non-coding regions, you will want to download the matching ncrna file. Following the release-111 example above, the download command will be wget ftp://ftp.ensembl.org/pub/release-111/fasta/homo_sapiens/ncrna/Homo_sapiens.GRCh38.ncrna.fa.gz After downloading both cdna and ncrna, merge the two together into a single file: cat Homo_sapiens.GRCh38.cdna.all.fa.gz Homo_sapiens.GRCh38.ncrna.fa.gz &gt; Homo_sapiens.GRCh38.111.fa.gz Unzip all files: gunzip *.gz 4.1 Digital Gene Expression No additional steps required. 4.2 Deep RNAseq When working with deep RNAseq data, you will also need to account for the ERCC ExFold RNA Spike-In that is often used for quality control. Determine the version of the spike in used in your experiment. Identify the FASTA file that catalogues spike-in sequences from the vendor’s page. This can usually be found under the manuals tab. As of writing this, ERCC92 is the latest version with the FASTA available at https://assets.thermofisher.com/TFS-Assets/LSG/manuals/ERCC92.zip Download the spike-in file to your reference/ subdirectory: wget https://assets.thermofisher.com/TFS-Assets/LSG/manuals/ERCC92.zip Unzip the downloaded file to retrieve the FASTA sequences: unzip ERCC92.zip "],["settings.html", "5 YAML Settings 5.1 Digital Gene Expression 5.2 Deep RNAseq", " 5 YAML Settings bcbio offers a rich suite of analysis tools, with highly-customizable configurations. The number of options can be overwhelming. Here, we provide exemplar files that should work for most standard analyses at the LSP. These should serve as a starting point, and users are expected to tweak the files to suit their particular needs. For the purposes of consistency with the rest of the guide, please name your configuration file O2.yaml. If you are using the standard reference genome (i.e., not downloading your own), remove lines that begin with transcriptome_fasta and transcriptome_gtf. If you are using a custom reference, remove the line that begins with genome_build. If you reference contains non-coding regions as discussed previously, replace GRCh38.cdna.all.fa.gz with GRCh38.111.fa.gz. In the YAML format, white space matters! When copying and pasting the examples below, please ensure that each line is properly indented. 5.1 Digital Gene Expression For DGE, we recommend to use the following configuration file as a template. Copy and paste the the lines below to your O2.yaml or download it directly using the command wget https://labsyspharm.github.io/rnaseq/example_settings/dge/O2.yaml. If using a custom reference, replace abc123 with your eCommons ID and myProject with your project name. details: - analysis: scRNA-seq genome_build: hg38 algorithm: transcriptome_fasta: /n/scratch/abc123/myProject/reference/Homo_sapiens.GRCh38.cdna.all.fa transcriptome_gtf: /n/scratch/abc123/myProject/reference/Homo_sapiens.GRCh38.111.gtf umi_type: harvard-scrb minimum_barcode_depth: 0 cellular_barcode_correction: 1 positional_umi: False 5.2 Deep RNAseq For deep RNAseq, we recommend to use the following configuration file as a template. Copy and paste the lines below to your O2.yaml or download it directly using the command wget https://labsyspharm.github.io/rnaseq/example_settings/rna_seq/O2.yaml. If using a custom reference, replace abc123 with your eCommons ID and myProject with your project name. Ensure that the Spike-in FASTA file matches what you downloaded previously. details: - analysis: RNA-seq genome_build: hg38 algorithm: transcriptome_fasta: /n/scratch/abc123/myProject/reference/Homo_sapiens.GRCh38.cdna.all.fa transcriptome_gtf: /n/scratch/abc123/myProject/reference/Homo_sapiens.GRCh38.111.gtf aligner: star expression_caller: salmon strandedness: auto trim_reads: false spikein_fasta: /n/scratch/abc123/myProject/reference/ERCC92.fa "],["bcbio.html", "6 Submit bcbio job", " 6 Submit bcbio job After composing the O2.yaml configuration file, you are ready to run bcbio. Instantiate the workspace by running bcbio_nextgen.py -w template O2.yaml alignment.csv fastq OR, if you had merged multiple files per sample, bcbio_nextgen.py -w template O2.yaml alignment.csv merged You should now see the alignment/ subdirectory, and the work/ subdirectory inside of it. Descend into it: cd alignment/work All that remains to do is tell O2 the computational requirements for bcbio. Copy and paste the following lines into a file called submit_bcbio.sh: #!/bin/sh #SBATCH -p medium #SBATCH -J bcbio_O2 #SBATCH -o run.o #SBATCH -e run.e #SBATCH -t 4-00:00 #SBATCH --cpus-per-task=1 #SBATCH --mem=8000 export PATH=/n/app/bcbio/tools/bin:$PATH bcbio_nextgen.py ../config/alignment.yaml \\ -n 24 -t ipython -s slurm -q medium -r t=4-00:00 --timeout 2000 More information about these settings can be found in the O2 wiki. Once the file is ready, use it to kick off the run (after double-checking that you are currently in the alignment/work/ subdirectory): sbatch submit_bcbio.sh "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
